WITH 
/*

[NAME]

- HANA_Global_CriticalTimeFrames_1.00.90+_ESS

[DESCRIPTION]

- Check for potentially critical historic time frames

[SOURCE]

- SAP Note 1969700

[DETAILS AND RESTRICTIONS]

- M_LOAD_HISTORY_SERVICE available starting with SAP HANA 1.00.90
- HOST_SERVICE_THREAD_SAMPLES only available with embedded statistics server

[VALID FOR]

- Revisions:              >= 1.00.90
- Statistics server type: ESS

[SQL COMMAND VERSION]

- 2015/09/25:  1.0 (initial version)
- 2015/11/11:  1.1 (BLK_TRANS included)
- 2018/12/04:  1.2 (shortcuts for BEGIN_TIME and END_TIME like 'C', 'E-S900' or 'MAX')

[INVOLVED TABLES]

- M_LOAD_HISTORY_SERVICE
- M_SERVICE_THREAD_SAMPLES
- HOST_SERVICE_THREAD_SAMPLES

[INPUT PARAMETERS]

- BEGIN_TIME

  Begin time

  '2018/12/05 14:05:00' --> Set begin time to 5th of December 2018, 14:05
  'C'                   --> Set begin time to current time
  'C-S900'              --> Set begin time to current time minus 900 seconds
  'C-M15'               --> Set begin time to current time minus 15 minutes
  'C-H5'                --> Set begin time to current time minus 5 hours
  'C-D1'                --> Set begin time to current time minus 1 day
  'C-W4'                --> Set begin time to current time minus 4 weeks
  'E-S900'              --> Set begin time to end time minus 900 seconds
  'E-M15'               --> Set begin time to end time minus 15 minutes
  'E-H5'                --> Set begin time to end time minus 5 hours
  'E-D1'                --> Set begin time to end time minus 1 day
  'E-W4'                --> Set begin time to end time minus 4 weeks
  'MIN'                 --> Set begin time to minimum (1000/01/01 00:00:00)

- END_TIME

  End time

  '2018/12/08 14:05:00' --> Set end time to 8th of December 2018, 14:05
  'C'                   --> Set end time to current time
  'C-S900'              --> Set end time to current time minus 900 seconds
  'C-M15'               --> Set end time to current time minus 15 minutes
  'C-H5'                --> Set end time to current time minus 5 hours
  'C-D1'                --> Set end time to current time minus 1 day
  'C-W4'                --> Set end time to current time minus 4 weeks
  'B+S900'              --> Set end time to begin time plus 900 seconds
  'B+M15'               --> Set end time to begin time plus 15 minutes
  'B+H5'                --> Set end time to begin time plus 5 hours
  'B+D1'                --> Set end time to begin time plus 1 day
  'B+W4'                --> Set end time to begin time plus 4 weeks
  'MAX'                 --> Set end time to maximum (9999/12/31 23:59:59)

- HOST

  Host name

  'saphana01'     --> Specific host saphana01
  'saphana%'      --> All hosts starting with saphana
  '%'             --> All hosts

- MIN_TOTAL_CPU_PCT

  Minimum threshold for the total CPU consumption (%)

  80              --> Display time frames with a CPU consumption of 80 % or more
  -1              --> No check for total CPU consumption

- MIN_SYSTEM_CPU_PCT

  Minimum threshold for the system CPU consumption (%)

  50              --> Display time frames with a system CPU consumption of 50 % or more
  -1              --> No check for system CPU consumption

- MIN_MEM_USED_PCT

  Minimum threshold for used memory compared to global allocation limit (%)

  80              --> Display time frames with a used memory of at least 80 % of the global allocation limit
  -1              --> No check for used memory 

- MIN_SWAP_IN_MB

  Minimum threshold for swap in (MB)

  1               --> Display time frames with a swap in of at least 1 MB
  -1              --> No check for swap in

- MIN_PING_MS

  Minimum threshold for the indexserver ping time (ms)

  100             --> Display time frames with an indexserver ping time of 100 ms or more
  -1              --> No check for indexserver ping time

- MIN_PENDING_SESSIONS

  Minimum threshold for pending sessions

  5               --> Display time frames with at least 5 pending sessions
  -1              --> No check for pending sessions

- MIN_VERSIONS

  Minimum threshold for MVCC versions

  5000000         --> Display time frames with at least 5 million MVCC versions
  -1              --> No check for MVCC versions

- MIN_LOAD_GAP_S

  Minimum gap in load histories (s)

  120             --> Display time frames with a load history gap of 120 s or more
  -1              --> No check for gaps in the load history

- MIN_WAITING_THREADS

  Minimum number of waiting threads (including idle waits like "Job Exec Waiting")
   
  100              --> Display time frames with 100 or more waiting threads
  -1              --> No check for blocked threads

- MIN_BLOCKED_THREADS

  Minimum number of blocked threads (transactional and internal locks)

  50              --> Display time frames with 50 or more blocked threads
  -1              --> No check for blocked threads

- MIN_BLOCKED_TRANS

  Minimum number of blocked transactions (transactional lock waits)

  20              --> Display time frames with 20 or more blocked transactions
  -1              --> No check for blocked threads

- TIME_SLICE_S

  Time intervals for aggregation

  10              --> Aggregation on a 10 seconds basis
  900             --> Aggregation on a 15 minutes basis

- AGGREGATION_TYPE

  Type of aggregation (e.g. average, maximum)

  'AVG'           --> Average value
  'MAX'           --> Maximum value

[OUTPUT PARAMETERS]

- SNAPSHOT_TIME: Timestamp
- HOST:          Host name
- AGG:           Type of aggregation (AVG -> average values, MAX -> peak values)
- TOT_CPU_PCT:   Total CPU consumption (%)
- SYS_CPU_PCT:   System CPU consumption (%)
- MEM_USED_PCT:  Fraction of global allocation limit currently used by SAP HANA (%)
- UNLOADS:       Number of column store unloads
- SWAP_IN_MB:    Amount of data swapped in (MB)
- PING_MS:       Indexserver ping time (ms)
- VERSIONS:      Number of MVCC versions
- LOAD_GAP_S:    Nameserver history load gap (s)
- PEND_SESS:     Number of pending sessions
- WAIT_THR:      Number of waiting threads (including idle waits like "Job Exec Waiting")
- BLK_THR:       Number of blocked threads
- BLK_TRANS:     Number of transactional lock waits

[EXAMPLE OUTPUT]

---------------------------------------------------------------------------------------------------------------------------------------------------------
|BEGIN_TIME         |HOST  |AGG|TOT_CPU_PCT|SYS_CPU_PCT|MEM_USED_PCT|UNLOADS|SWAP_IN_MB|PING_MS|VERSIONS|LOAD_GAP_S|PEND_SESS|WAIT_THR|BLK_THR|BLK_TRANS|
---------------------------------------------------------------------------------------------------------------------------------------------------------
|2015/11/11 08:00:00|hana01|MAX|          7|          0|          70|      0|      0.00|    469|  156526|        10|        0|       2|     15|        1|
|2015/11/11 07:33:00|hana01|MAX|         14|          1|          70|      0|      0.00|     13|  183060|        11|        0|     206|    202|      187|
|2015/11/11 07:32:00|hana01|MAX|          6|          0|          70|      0|      0.00|     10|  110136|        10|        1|     288|    284|      260|
|2015/11/11 07:31:00|hana01|MAX|         93|         40|         100|      0|      0.00|    447|  102347|       487|      115|     354|    611|      317|
|2015/11/11 07:30:00|hana01|MAX|           |           |            |       |          |       |        |          |         |        |    611|         |
|2015/11/11 07:29:00|hana01|MAX|           |           |            |       |          |       |        |          |         |        |    608|         |
|2015/11/11 07:28:00|hana01|MAX|           |           |            |       |          |       |        |          |         |        |    602|         |
|2015/11/11 07:27:00|hana01|MAX|           |           |            |       |          |       |        |          |         |        |    590|         |
|2015/11/11 07:26:00|hana01|MAX|           |           |            |       |          |       |        |          |         |        |    584|         |
|2015/11/11 07:25:00|hana01|MAX|           |           |            |       |          |       |        |          |         |        |    567|         |
|2015/11/11 07:24:00|hana01|MAX|           |           |            |       |          |       |        |          |         |        |    458|         |
|2015/11/11 07:23:00|hana01|MAX|         12|          1|          70|      0|      0.00|     11|   38001|        10|        0|       7|    112|        0|
|2015/11/11 07:22:00|hana01|MAX|          6|          0|          70|      0|      0.00|   3870|  207807|        14|        0|       5|     10|        1|
|2015/11/11 04:04:00|hana01|MAX|          7|          0|          70|      0|      0.00|   3534|  171410|        13|        0|      14|     28|        5|
---------------------------------------------------------------------------------------------------------------------------------------------------------

*/

BASIS_INFO AS
( SELECT
    CASE
      WHEN BEGIN_TIME =    'C'                             THEN CURRENT_TIMESTAMP
      WHEN BEGIN_TIME LIKE 'C-S%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(BEGIN_TIME, 'C-S'))
      WHEN BEGIN_TIME LIKE 'C-M%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(BEGIN_TIME, 'C-M') * 60)
      WHEN BEGIN_TIME LIKE 'C-H%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(BEGIN_TIME, 'C-H') * 3600)
      WHEN BEGIN_TIME LIKE 'C-D%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(BEGIN_TIME, 'C-D') * 86400)
      WHEN BEGIN_TIME LIKE 'C-W%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(BEGIN_TIME, 'C-W') * 86400 * 7)
      WHEN BEGIN_TIME LIKE 'E-S%'                          THEN ADD_SECONDS(TO_TIMESTAMP(END_TIME, 'YYYY/MM/DD HH24:MI:SS'), -SUBSTR_AFTER(BEGIN_TIME, 'E-S'))
      WHEN BEGIN_TIME LIKE 'E-M%'                          THEN ADD_SECONDS(TO_TIMESTAMP(END_TIME, 'YYYY/MM/DD HH24:MI:SS'), -SUBSTR_AFTER(BEGIN_TIME, 'E-M') * 60)
      WHEN BEGIN_TIME LIKE 'E-H%'                          THEN ADD_SECONDS(TO_TIMESTAMP(END_TIME, 'YYYY/MM/DD HH24:MI:SS'), -SUBSTR_AFTER(BEGIN_TIME, 'E-H') * 3600)
      WHEN BEGIN_TIME LIKE 'E-D%'                          THEN ADD_SECONDS(TO_TIMESTAMP(END_TIME, 'YYYY/MM/DD HH24:MI:SS'), -SUBSTR_AFTER(BEGIN_TIME, 'E-D') * 86400)
      WHEN BEGIN_TIME LIKE 'E-W%'                          THEN ADD_SECONDS(TO_TIMESTAMP(END_TIME, 'YYYY/MM/DD HH24:MI:SS'), -SUBSTR_AFTER(BEGIN_TIME, 'E-W') * 86400 * 7)
      WHEN BEGIN_TIME =    'MIN'                           THEN TO_TIMESTAMP('1000/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS')
      WHEN SUBSTR(BEGIN_TIME, 1, 1) NOT IN ('C', 'E', 'M') THEN TO_TIMESTAMP(BEGIN_TIME, 'YYYY/MM/DD HH24:MI:SS')
    END BEGIN_TIME,
    CASE
      WHEN END_TIME =    'C'                             THEN CURRENT_TIMESTAMP
      WHEN END_TIME LIKE 'C-S%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(END_TIME, 'C-S'))
      WHEN END_TIME LIKE 'C-M%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(END_TIME, 'C-M') * 60)
      WHEN END_TIME LIKE 'C-H%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(END_TIME, 'C-H') * 3600)
      WHEN END_TIME LIKE 'C-D%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(END_TIME, 'C-D') * 86400)
      WHEN END_TIME LIKE 'C-W%'                          THEN ADD_SECONDS(CURRENT_TIMESTAMP, -SUBSTR_AFTER(END_TIME, 'C-W') * 86400 * 7)
      WHEN END_TIME LIKE 'B+S%'                          THEN ADD_SECONDS(TO_TIMESTAMP(BEGIN_TIME, 'YYYY/MM/DD HH24:MI:SS'), SUBSTR_AFTER(END_TIME, 'B+S'))
      WHEN END_TIME LIKE 'B+M%'                          THEN ADD_SECONDS(TO_TIMESTAMP(BEGIN_TIME, 'YYYY/MM/DD HH24:MI:SS'), SUBSTR_AFTER(END_TIME, 'B+M') * 60)
      WHEN END_TIME LIKE 'B+H%'                          THEN ADD_SECONDS(TO_TIMESTAMP(BEGIN_TIME, 'YYYY/MM/DD HH24:MI:SS'), SUBSTR_AFTER(END_TIME, 'B+H') * 3600)
      WHEN END_TIME LIKE 'B+D%'                          THEN ADD_SECONDS(TO_TIMESTAMP(BEGIN_TIME, 'YYYY/MM/DD HH24:MI:SS'), SUBSTR_AFTER(END_TIME, 'B+D') * 86400)
      WHEN END_TIME LIKE 'B+W%'                          THEN ADD_SECONDS(TO_TIMESTAMP(BEGIN_TIME, 'YYYY/MM/DD HH24:MI:SS'), SUBSTR_AFTER(END_TIME, 'B+W') * 86400 * 7)
      WHEN END_TIME =    'MAX'                           THEN TO_TIMESTAMP('9999/12/31 00:00:00', 'YYYY/MM/DD HH24:MI:SS')
      WHEN SUBSTR(END_TIME, 1, 1) NOT IN ('C', 'B', 'M') THEN TO_TIMESTAMP(END_TIME, 'YYYY/MM/DD HH24:MI:SS')
    END END_TIME,
    HOST,
    MIN_TOTAL_CPU_PCT,
    MIN_SYSTEM_CPU_PCT,
    MIN_MEM_USED_PCT,
    MIN_UNLOADS,
    MIN_SWAP_IN_MB,
    MIN_PING_MS,
    MIN_PENDING_SESSIONS,
    MIN_VERSIONS,
    MIN_LOAD_GAP_S,
    MIN_WAITING_THREADS,
    MIN_BLOCKED_THREADS,
    MIN_BLOCKED_TRANSACTIONS,
    TIME_SLICE_S,
    'MAX' AGGREGATION_TYPE
  FROM
  ( SELECT             /* Modification section */
      '1000/10/18 07:58:00' BEGIN_TIME,                  /* YYYY/MM/DD HH24:MI:SS timestamp, C, C-S<seconds>, C-M<minutes>, C-H<hours>, C-D<days>, C-W<weeks>, E-S<seconds>, E-M<minutes>, E-H<hours>, E-D<days>, E-W<weeks>, MIN */
      '9999/10/18 08:05:00' END_TIME,                    /* YYYY/MM/DD HH24:MI:SS timestamp, C, C-S<seconds>, C-M<minutes>, C-H<hours>, C-D<days>, C-W<weeks>, B+S<seconds>, B+M<minutes>, B+H<hours>, B+D<days>, B+W<weeks>, MAX */
      '%' HOST,
      80 MIN_TOTAL_CPU_PCT,
      30 MIN_SYSTEM_CPU_PCT,
      80 MIN_MEM_USED_PCT,
      1 MIN_UNLOADS,
      1 MIN_SWAP_IN_MB,
      100 MIN_PING_MS,
      5 MIN_PENDING_SESSIONS,
      5000000 MIN_VERSIONS,
      120 MIN_LOAD_GAP_S,
      100 MIN_WAITING_THREADS,
      50 MIN_BLOCKED_THREADS,
      20 MIN_BLOCKED_TRANSACTIONS,
      60 TIME_SLICE_S,
      'MAX' AGGREGATION_TYPE                /* MAX, AVG */
    FROM
      DUMMY
  )
)
SELECT
  TO_VARCHAR(BEGIN_TIME, 'YYYY/MM/DD HH24:MI:SS') BEGIN_TIME,
  HOST,
  AGGREGATION_TYPE AGG,
  IFNULL(LPAD(ROUND(TOT_CPU_PCT), 11), '') TOT_CPU_PCT,
  IFNULL(LPAD(ROUND(SYS_CPU_PCT), 11), '') SYS_CPU_PCT,
  IFNULL(LPAD(ROUND(MEM_USED_PCT), 12), '') MEM_USED_PCT,
  IFNULL(LPAD(ROUND(UNLOADS), 7), '') UNLOADS,
  IFNULL(LPAD(TO_DECIMAL(SWAP_IN_MB, 10, 2), 10), '') SWAP_IN_MB,
  IFNULL(LPAD(ROUND(PING_MS), 7), '') PING_MS,
  IFNULL(LPAD(ROUND(VERSIONS), 8), '') VERSIONS,
  IFNULL(LPAD(ROUND(LOAD_GAP_S), 10), '') LOAD_GAP_S,
  IFNULL(LPAD(ROUND(PEND_SESS), 9), '') PEND_SESS,
  IFNULL(LPAD(ROUND(WAIT_THR), 8), '') WAIT_THR,
  IFNULL(LPAD(ROUND(BLK_THR), 7), '') BLK_THR,
  IFNULL(LPAD(ROUND(BLK_TRANS), 9), '') BLK_TRANS
FROM
( SELECT
    IFNULL(L.BEGIN_TIME, T.BEGIN_TIME) BEGIN_TIME,
    IFNULL(L.HOST, T.HOST) HOST,
    L.TOT_CPU_PCT,
    L.SYS_CPU_PCT,
    L.MEM_USED_PCT,
    L.UNLOADS,
    L.SWAP_IN_MB,
    L.PING_MS,
    L.LOAD_GAP_S,
    L.PEND_SESS,
    L.VERSIONS,
    L.WAIT_THR,
    T.BLK_THR,
    L.BLK_TRANS,
    BI.AGGREGATION_TYPE
  FROM
    BASIS_INFO BI,
  ( SELECT
      ADD_SECONDS(TO_TIMESTAMP('2014/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 
        FLOOR(SECONDS_BETWEEN(TO_TIMESTAMP('2014/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), L.TIME) / BI.TIME_SLICE_S) * BI.TIME_SLICE_S) BEGIN_TIME,
      L.HOST,
      MAP(BI.AGGREGATION_TYPE, 'MAX', MAX(L.CPU),        AVG(L.CPU)) TOT_CPU_PCT,
      MAP(BI.AGGREGATION_TYPE, 'MAX', MAX(L.SYSTEM_CPU), AVG(L.SYSTEM_CPU)) SYS_CPU_PCT,
      MAP(BI.AGGREGATION_TYPE, 'MAX', MAX(L.MEMORY_USED / L.MEMORY_ALLOCATION_LIMIT * 100), AVG(L.MEMORY_USED / L.MEMORY_ALLOCATION_LIMIT * 100)) MEM_USED_PCT,
      MAP(BI.AGGREGATION_TYPE, 'MAX', MAX(L.CS_UNLOAD_COUNT), AVG(L.CS_UNLOAD_COUNT)) / 1024 / 1024 UNLOADS,
      MAP(BI.AGGREGATION_TYPE, 'MAX', MAX(L.SWAP_IN),    AVG(L.SWAP_IN)) / 1024 / 1024 SWAP_IN_MB,
      MAP(BI.AGGREGATION_TYPE, 'MAX', MAX(L.PING_TIME),  AVG(L.PING_TIME)) PING_MS,
      MAP(BI.AGGREGATION_TYPE, 'MAX', MAX(L.PENDING_SESSION_COUNT), AVG(L.PENDING_SESSION_COUNT)) PEND_SESS,
      MAP(BI.AGGREGATION_TYPE, 'MAX', MAX(L.WAITING_THREAD_COUNT), AVG(L.WAITING_THREAD_COUNT)) WAIT_THR,
      MAP(BI.AGGREGATION_TYPE, 'MAX', MAX(L.BLOCKED_TRANSACTION_COUNT), AVG(L.BLOCKED_TRANSACTION_COUNT)) BLK_TRANS,
      MAP(BI.AGGREGATION_TYPE, 'MAX', MAX(L.VERSION_COUNT), AVG(L.VERSION_COUNT)) VERSIONS,
      MAP(BI.AGGREGATION_TYPE, 'MAX', MAX(L.LOAD_GAP_S), AVG(L.LOAD_GAP_S)) LOAD_GAP_S
    FROM
      BASIS_INFO BI,
    ( SELECT
        HOST,
        TIME,
        CPU,
        SYSTEM_CPU,
        MEMORY_USED,
        MEMORY_ALLOCATION_LIMIT,
        CS_UNLOAD_COUNT,
        SWAP_IN,
        PING_TIME,
        PENDING_SESSION_COUNT,
        MVCC_VERSION_COUNT VERSION_COUNT,
        WAITING_THREAD_COUNT,
        BLOCKED_TRANSACTION_COUNT,
        SECONDS_BETWEEN(LAG(TIME, 1) OVER (PARTITION BY HOST ORDER BY TIME), TIME) LOAD_GAP_S
      FROM
        M_LOAD_HISTORY_SERVICE
    ) L
    WHERE
      L.HOST LIKE BI.HOST AND
      L.TIME BETWEEN BI.BEGIN_TIME AND BI.END_TIME
    GROUP BY
      ADD_SECONDS(TO_TIMESTAMP('2014/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 
        FLOOR(SECONDS_BETWEEN(TO_TIMESTAMP('2014/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), L.TIME) / BI.TIME_SLICE_S) * BI.TIME_SLICE_S),
      L.HOST,
      BI.AGGREGATION_TYPE
  ) L FULL OUTER JOIN
  ( SELECT
      ADD_SECONDS(TO_TIMESTAMP('2014/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 
        FLOOR(SECONDS_BETWEEN(TO_TIMESTAMP('2014/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), T.TIMESTAMP) / BI.TIME_SLICE_S) * BI.TIME_SLICE_S) BEGIN_TIME,
      T.HOST,
      MAP(BI.AGGREGATION_TYPE, 'MAX', MAX(T.BLOCKED_THREADS), AVG(T.BLOCKED_THREADS)) BLK_THR
    FROM
      BASIS_INFO BI,
    ( SELECT
        T.TIMESTAMP,
        T.HOST,
        SUM(T.BLOCKED) OVER (PARTITION BY T.TIMESTAMP, T.HOST) BLOCKED_THREADS
      FROM
        BASIS_INFO BI,
      ( SELECT
          TIMESTAMP,
          HOST,
          CASE WHEN THREAD_STATE IN ( 'ConditionalVariable Wait', 'ExclusiveLock Enter', 'Mutex Wait', 'Semaphore Wait', 'SharedLock Enter', 'Barrier Wait' ) AND
            ( CALLING IS NULL OR CALLING = '' ) THEN 1 ELSE 0 END BLOCKED
        FROM
          M_SERVICE_THREAD_SAMPLES
      ) T
      WHERE
        T.HOST LIKE BI.HOST AND
        T.TIMESTAMP BETWEEN BI.BEGIN_TIME AND BI.END_TIME
    ) T
    GROUP BY
      ADD_SECONDS(TO_TIMESTAMP('2014/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), 
        FLOOR(SECONDS_BETWEEN(TO_TIMESTAMP('2014/01/01 00:00:00', 'YYYY/MM/DD HH24:MI:SS'), T.TIMESTAMP) / BI.TIME_SLICE_S) * BI.TIME_SLICE_S),
      T.HOST,
      BI.AGGREGATION_TYPE
  ) T ON
    L.HOST = T.HOST AND
    L.BEGIN_TIME = T.BEGIN_TIME
  WHERE
  ( MIN_TOTAL_CPU_PCT != -1 AND IFNULL(TOT_CPU_PCT, 0) >= MIN_TOTAL_CPU_PCT ) OR
  ( MIN_SYSTEM_CPU_PCT != -1 AND IFNULL(SYS_CPU_PCT, 0) >= MIN_SYSTEM_CPU_PCT ) OR
  ( MIN_MEM_USED_PCT != -1 AND IFNULL(MEM_USED_PCT, 0) >= MIN_MEM_USED_PCT ) OR
  ( MIN_UNLOADS != -1 AND IFNULL(UNLOADS, 0) >= MIN_UNLOADS ) OR
  ( MIN_SWAP_IN_MB != -1 AND IFNULL(SWAP_IN_MB, 0) >= MIN_SWAP_IN_MB ) OR
  ( MIN_PING_MS != -1 AND IFNULL(PING_MS, 0) >= MIN_PING_MS ) OR
  ( MIN_PENDING_SESSIONS != -1 AND IFNULL(PEND_SESS, 0) >= MIN_PENDING_SESSIONS ) OR
  ( MIN_LOAD_GAP_S != -1 AND IFNULL(LOAD_GAP_S, 0) >= MIN_LOAD_GAP_S ) OR
  ( MIN_WAITING_THREADS != -1 AND IFNULL(WAIT_THR, 0) >= MIN_WAITING_THREADS ) OR
  ( MIN_BLOCKED_THREADS != -1 AND IFNULL(BLK_THR, 0) >= MIN_BLOCKED_THREADS ) OR
  ( MIN_BLOCKED_TRANSACTIONS != -1 AND IFNULL(BLK_TRANS, 0) >= MIN_BLOCKED_TRANSACTIONS )
)
ORDER BY
  BEGIN_TIME DESC

